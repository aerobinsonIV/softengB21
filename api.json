{
    "openapi": "3.0.3",
    "info": {
        "title": "Project Management App API",
        "description": "API for an app to manage projects by Zach, Eli, Iv, and Jatin for CS 3733 B21",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://"
        }
    ],
    "paths": {
        "/teammate/{project_name}/{teammate_name}": {
            "post": {
                "description": "Create a new teammate in `project_name` project with name `teammate_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project to add a Teammate to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "teammate_name",
                        "in": "path",
                        "description": "Name of Teammate to add to the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created teammate under project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Teammate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the teammate in `project_name` project with name `teammate_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project to delete the Teammate from.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "teammate_name",
                        "in": "path",
                        "description": "Name of Teammate to delete from the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted teammate under project.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "default": "Successfully removed teammate."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/{project_name}/{id}": {
            "post": {
                "description": "Create a new task in `project_name` project with `id`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project to add a Task to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to add to the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of task to add to the Project.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created task under project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/decompose/{project_name}/{id}": {
            "post": {
                "description": "Decomposes the task in `project_name` project with `id`. Appends tasks from the header parameter onto the existing list of subtasks in the task with `id`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project to get the task to decompose.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to add to the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subtasks",
                        "in": "header",
                        "description": "Array of Tasks (the subtasks) to add to the desired Task.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref" : "#/components/schemas/Task"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Decomposed task under project. Returns the new state of the Task with `id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/assign/{project_name}/{id}/{teammate_name}": {
            "post": {
                "description": "Assigns a teammate to the task in `project_name` project with `id`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project where the task is.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to assign the teammmate to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teammate_name",
                        "in": "path",
                        "description": "Name of teammate to assign to task. Must already exist in the Project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assigned Teammate to Task. Returns the new state of the Task with `id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Unassigns a teammate from the task in `project_name` project with `id`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project where the task is.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to unassign the teammmate from.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teammate_name",
                        "in": "path",
                        "description": "Name of teammate to unassign to task.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unassigned Teammate from Task. Returns the new state of the Task with `id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/mark/{project_name}/{id}/{status}": {
            "post": {
                "description": "Updates the markStatus of the task in `project_name` project and `id` with `status`. Only tasks with no subtasks can be updated.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project where the task is.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to assign the teammmate to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "New mark status for the task to have.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated markStatus of Task. Returns the new state of the Task with `id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/rename/{project_name}/{id}/{name}": {
            "post": {
                "description": "Updates the name of the task in `project_name` project and `id` with `status`. This is not the same as the task's id, which cannot be changed.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of Project where the task is.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to rename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "New name for the task to have.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated name of Task. Returns the new state of the Task with `id`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/{project_name}": {
            "post": {
                "description": "Creates a project with `project_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of the Project to create.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created Project. Returns the new Project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves the project with `project_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of the Project to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created Project. Returns the new Project.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the project with `project_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of the Project to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Project.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "default": "Successfully deleted project."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/archive/{project_name}": {
            "post": {
                "description": "Archives the project with `project_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of the Project to archive.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Archived Project. Returns the new Project state.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/unarchive/{project_name}": {
            "post": {
                "description": "Unarchives the project with `project_name`.",
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "Name of the Project to unarchive.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unarchived Project. Returns the new Project state.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "Retrieves all projects (archived or not).",
                "responses": {
                    "200": {
                        "description": "Unarchived Project. Returns the new Project state.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Project": {
                "type": "object",
                "required": [
                    "name",
                    "tasks",
                    "team",
                    "isArchived"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "team": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Teammate"
                        }
                    },
                    "isArchived": {
                        "type": "boolean"
                    }
                }
            },
            "Teammate": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Task": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "subtasks",
                    "markStatus",
                    "teammates"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subtasks": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "markStatus": {
                        "type": "string"
                    },
                    "teammates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Teammate"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}